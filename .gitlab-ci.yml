# CI Pipeline for Scramble
#

stages:
  - version
  - build
  - test
  - upload

# ---------- Templates -------------

.template-export: &template-export
  stage: build
  image: mrminimal/godot-desktop-export:3.1.1
  script:
  # Set version for Scramble release
  - mkdir -p Scramble-$TYPE/meta
  - cp version Scramble-$TYPE/meta/version
  # Create export
  - mkdir -p export
  - cd Scramble-$TYPE
  - godot -v --export $PLATFORM ../Scramble-$TYPE.$EXTENSION
  - if ! test -f ../Scramble-$TYPE.$EXTENSION; then exit 1; fi
  artifacts:
    name: Scramble-$TYPE-$CI_BUILD_REF
    paths:
    - Scramble-$TYPE.$EXTENSION
    - Scramble-$TYPE.pck
    expire_in: 1 hour

.template-skip-lfs: &template-skip-lfs
  variables:
    GIT_LFS_SKIP_SMUDGE: "1"

.template-only-client-changes: &template-only-client-changes
  only:
    changes:
    - Scramble-client/**/*

.template-only-server-changes: &template-only-server-changes
  only:
    changes:
    - Scramble-server/**/*

# -------------- Jobs --------------

# Find current version and increase
resolve-version:version:
  stage: version
  image: alpine/semver
  <<: *template-skip-lfs
  script:
  - apk add git
  - PREV_VERSION=`git describe --abbrev=0`
  - semver -c -i minor $PREV_VERSION > version
  - if [ $? -ne 0 ]; then echo "0.0.0" > version; fi
  - echo "New version will be:"
  - cat version
  artifacts:
    paths:
    - version
    expire_in: 1 hour

# Client builds

linux-client:build:
  <<: *template-export
  #<<: *template-only-client-changes
  variables:
    TYPE: "client"
    PLATFORM: "linux"
    EXTENSION: "x64"

mac-client:build:
  <<: *template-export
  #<<: *template-only-client-changes
  variables:
    TYPE: "client"
    PLATFORM: "mac"
    EXTENSION: "x64"

windows-client:build:
  <<: *template-export
  #<<: *template-only-client-changes
  variables:
    TYPE: "client"
    PLATFORM: "windows"
    EXTENSION: "exe"

# Server builds

linux-server:build:
  <<: *template-export
  #<<: *template-only-server-changes
  variables:
    TYPE: "server"
    PLATFORM: "linux"
    EXTENSION: "x64"

mac-server:build:
  <<: *template-export
  #<<: *template-only-server-changes
  variables:
    TYPE: "server"
    PLATFORM: "mac"
    EXTENSION: "x64"

windows-server:build:
  <<: *template-export
  #<<: *template-only-server-changes
  variables:
    TYPE: "server"
    PLATFORM: "windows"
    EXTENSION: "exe"

# Tests

license-header:test:
  stage: test
  image: alpine
  <<: *template-skip-lfs
  script:
  - .gitlab/licenseHeaderCheck.sh .gitlab/license/LICENSE_HEADER

file-naming:test:
  stage: test
  image: alpine
  <<: *template-skip-lfs
  script:
  - apk update && apk add bash
  - ./.gitlab/fileNamingConventionCheck.sh

global-logging:test:
  stage: test
  image: alpine
  <<: *template-skip-lfs
  script:
  - apk update && apk add grep
  - ./.gitlab/scrambleLoggingCheck.sh

# Upload

linux-client:upload:
  stage: upload
  image: alpine
  dependencies:
  - linux-client:build
  - resolve-version:version
  variables:
    GIT_STRATEGY: none
  script:
  - echo "I found some labels $CI_MERGE_REQUEST_LABELS"
  - echo "$RELEASE_TOKEN"
  - ls -la 
  #<<: *template-only-client-changes
  only:
  - master@ScrambleSim/Scramble
    variables:
    - $CI_COMMIT_MESSAGE =~ /Merge/
